// Mocks generated by Mockito 5.1.0 from annotations
// in domain/test/helper.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i2;
import 'package:domain/movie/entities/movie.dart' as _i7;
import 'package:domain/movie/entities/movie_detail.dart' as _i8;
import 'package:domain/movie/repository/movie_repository.dart' as _i3;
import 'package:domain/movie/usecase/get_movie_detail.dart' as _i11;
import 'package:domain/movie/usecase/get_movie_recommendations.dart' as _i12;
import 'package:domain/movie/usecase/get_now_playing_movies.dart' as _i13;
import 'package:domain/movie/usecase/get_popular_movies.dart' as _i14;
import 'package:domain/movie/usecase/get_top_rated_movies.dart' as _i15;
import 'package:domain/movie/usecase/get_watchlist_movies.dart' as _i17;
import 'package:domain/movie/usecase/get_watchlist_status.dart' as _i16;
import 'package:domain/movie/usecase/remove_watchlist.dart' as _i18;
import 'package:domain/movie/usecase/save_watchlist.dart' as _i19;
import 'package:domain/movie/usecase/search_movies.dart' as _i20;
import 'package:domain/tv/entities/tv_show.dart' as _i9;
import 'package:domain/tv/entities/tv_show_detail.dart' as _i10;
import 'package:domain/tv/repository/tv_show_repository.dart' as _i4;
import 'package:domain/tv/usecases/get_airing_tv_shows.dart' as _i21;
import 'package:domain/tv/usecases/get_popular_tv_shows.dart' as _i22;
import 'package:domain/tv/usecases/get_tv_recommendation.dart' as _i23;
import 'package:domain/tv/usecases/get_tv_show_detail.dart' as _i24;
import 'package:domain/tv/usecases/get_tv_show_watchlist.dart' as _i25;
import 'package:domain/tv/usecases/get_tv_show_watchlist_status.dart' as _i26;
import 'package:domain/tv/usecases/remove_tv_show_watchlist.dart' as _i27;
import 'package:domain/tv/usecases/save_tv_show_watchlist.dart' as _i28;
import 'package:domain/tv/usecases/search_tv_shows.dart' as _i29;
import 'package:domain/utils/failure.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

class _FakeMovieRepository_1 extends _i1.Fake implements _i3.MovieRepository {}

class _FakeTVShowRepository_2 extends _i1.Fake implements _i4.TVShowRepository {
}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i3.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i7.Movie>>> getNowPlayingMovies() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingMovies, []),
          returnValue: Future<_i2.Either<_i6.Failure, List<_i7.Movie>>>.value(
              _FakeEither_0<_i6.Failure, List<_i7.Movie>>())) as _i5
          .Future<_i2.Either<_i6.Failure, List<_i7.Movie>>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i7.Movie>>> getPopularMovies() =>
      (super.noSuchMethod(Invocation.method(#getPopularMovies, []),
          returnValue: Future<_i2.Either<_i6.Failure, List<_i7.Movie>>>.value(
              _FakeEither_0<_i6.Failure, List<_i7.Movie>>())) as _i5
          .Future<_i2.Either<_i6.Failure, List<_i7.Movie>>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i7.Movie>>> getTopRatedMovies() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedMovies, []),
          returnValue: Future<_i2.Either<_i6.Failure, List<_i7.Movie>>>.value(
              _FakeEither_0<_i6.Failure, List<_i7.Movie>>())) as _i5
          .Future<_i2.Either<_i6.Failure, List<_i7.Movie>>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, _i8.MovieDetail>> getMovieDetail(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieDetail, [id]),
          returnValue: Future<_i2.Either<_i6.Failure, _i8.MovieDetail>>.value(
              _FakeEither_0<_i6.Failure, _i8.MovieDetail>())) as _i5
          .Future<_i2.Either<_i6.Failure, _i8.MovieDetail>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i7.Movie>>> getMovieRecommendations(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieRecommendations, [id]),
          returnValue: Future<_i2.Either<_i6.Failure, List<_i7.Movie>>>.value(
              _FakeEither_0<_i6.Failure, List<_i7.Movie>>())) as _i5
          .Future<_i2.Either<_i6.Failure, List<_i7.Movie>>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i7.Movie>>> searchMovies(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#searchMovies, [query]),
          returnValue: Future<_i2.Either<_i6.Failure, List<_i7.Movie>>>.value(
              _FakeEither_0<_i6.Failure, List<_i7.Movie>>())) as _i5
          .Future<_i2.Either<_i6.Failure, List<_i7.Movie>>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, String>> saveWatchlist(
          _i8.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlist, [movie]),
              returnValue: Future<_i2.Either<_i6.Failure, String>>.value(
                  _FakeEither_0<_i6.Failure, String>()))
          as _i5.Future<_i2.Either<_i6.Failure, String>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, String>> removeWatchlist(
          _i8.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [movie]),
              returnValue: Future<_i2.Either<_i6.Failure, String>>.value(
                  _FakeEither_0<_i6.Failure, String>()))
          as _i5.Future<_i2.Either<_i6.Failure, String>>);
  @override
  _i5.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlist, [id]),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i7.Movie>>> getWatchlistMovies() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistMovies, []),
          returnValue: Future<_i2.Either<_i6.Failure, List<_i7.Movie>>>.value(
              _FakeEither_0<_i6.Failure, List<_i7.Movie>>())) as _i5
          .Future<_i2.Either<_i6.Failure, List<_i7.Movie>>>);
}

/// A class which mocks [TVShowRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVShowRepository extends _i1.Mock implements _i4.TVShowRepository {
  MockTVShowRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i9.TVShow>>> getPopularTVShows() =>
      (super.noSuchMethod(Invocation.method(#getPopularTVShows, []),
          returnValue: Future<_i2.Either<_i6.Failure, List<_i9.TVShow>>>.value(
              _FakeEither_0<_i6.Failure, List<_i9.TVShow>>())) as _i5
          .Future<_i2.Either<_i6.Failure, List<_i9.TVShow>>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i9.TVShow>>> getTopRatedTvShows() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedTvShows, []),
          returnValue: Future<_i2.Either<_i6.Failure, List<_i9.TVShow>>>.value(
              _FakeEither_0<_i6.Failure, List<_i9.TVShow>>())) as _i5
          .Future<_i2.Either<_i6.Failure, List<_i9.TVShow>>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i9.TVShow>>> getAiringTVShows() =>
      (super.noSuchMethod(Invocation.method(#getAiringTVShows, []),
          returnValue: Future<_i2.Either<_i6.Failure, List<_i9.TVShow>>>.value(
              _FakeEither_0<_i6.Failure, List<_i9.TVShow>>())) as _i5
          .Future<_i2.Either<_i6.Failure, List<_i9.TVShow>>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, _i10.TVShowDetail>> getTvShowDetail(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvShowDetail, [id]),
          returnValue: Future<_i2.Either<_i6.Failure, _i10.TVShowDetail>>.value(
              _FakeEither_0<_i6.Failure, _i10.TVShowDetail>())) as _i5
          .Future<_i2.Either<_i6.Failure, _i10.TVShowDetail>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i9.TVShow>>> searchTvShows(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTvShows, [query]),
          returnValue: Future<_i2.Either<_i6.Failure, List<_i9.TVShow>>>.value(
              _FakeEither_0<_i6.Failure, List<_i9.TVShow>>())) as _i5
          .Future<_i2.Either<_i6.Failure, List<_i9.TVShow>>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i9.TVShow>>> getTvShowWatchlist() =>
      (super.noSuchMethod(Invocation.method(#getTvShowWatchlist, []),
          returnValue: Future<_i2.Either<_i6.Failure, List<_i9.TVShow>>>.value(
              _FakeEither_0<_i6.Failure, List<_i9.TVShow>>())) as _i5
          .Future<_i2.Either<_i6.Failure, List<_i9.TVShow>>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, String>> saveWatchlist(
          _i10.TVShowDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlist, [tv]),
              returnValue: Future<_i2.Either<_i6.Failure, String>>.value(
                  _FakeEither_0<_i6.Failure, String>()))
          as _i5.Future<_i2.Either<_i6.Failure, String>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, String>> removeWatchlist(int? id) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [id]),
              returnValue: Future<_i2.Either<_i6.Failure, String>>.value(
                  _FakeEither_0<_i6.Failure, String>()))
          as _i5.Future<_i2.Either<_i6.Failure, String>>);
  @override
  _i5.Future<bool> getWatchlistStatus(int? id) =>
      (super.noSuchMethod(Invocation.method(#getWatchlistStatus, [id]),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i9.TVShow>>> getTvRecommendations(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvRecommendations, [id]),
          returnValue: Future<_i2.Either<_i6.Failure, List<_i9.TVShow>>>.value(
              _FakeEither_0<_i6.Failure, List<_i9.TVShow>>())) as _i5
          .Future<_i2.Either<_i6.Failure, List<_i9.TVShow>>>);
}

/// A class which mocks [GetMovieDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMovieDetail extends _i1.Mock implements _i11.GetMovieDetail {
  MockGetMovieDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_1()) as _i3.MovieRepository);
  @override
  _i5.Future<_i2.Either<_i6.Failure, _i8.MovieDetail>> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<_i2.Either<_i6.Failure, _i8.MovieDetail>>.value(
              _FakeEither_0<_i6.Failure, _i8.MovieDetail>())) as _i5
          .Future<_i2.Either<_i6.Failure, _i8.MovieDetail>>);
}

/// A class which mocks [GetMovieRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMovieRecommendations extends _i1.Mock
    implements _i12.GetMovieRecommendations {
  MockGetMovieRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_1()) as _i3.MovieRepository);
  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i7.Movie>>> execute(dynamic id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<_i2.Either<_i6.Failure, List<_i7.Movie>>>.value(
              _FakeEither_0<_i6.Failure, List<_i7.Movie>>())) as _i5
          .Future<_i2.Either<_i6.Failure, List<_i7.Movie>>>);
}

/// A class which mocks [GetNowPlayingMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetNowPlayingMovies extends _i1.Mock
    implements _i13.GetNowPlayingMovies {
  MockGetNowPlayingMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_1()) as _i3.MovieRepository);
  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i7.Movie>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: Future<_i2.Either<_i6.Failure, List<_i7.Movie>>>.value(
              _FakeEither_0<_i6.Failure, List<_i7.Movie>>())) as _i5
          .Future<_i2.Either<_i6.Failure, List<_i7.Movie>>>);
}

/// A class which mocks [GetPopularMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularMovies extends _i1.Mock implements _i14.GetPopularMovies {
  MockGetPopularMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_1()) as _i3.MovieRepository);
  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i7.Movie>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: Future<_i2.Either<_i6.Failure, List<_i7.Movie>>>.value(
              _FakeEither_0<_i6.Failure, List<_i7.Movie>>())) as _i5
          .Future<_i2.Either<_i6.Failure, List<_i7.Movie>>>);
}

/// A class which mocks [GetTopRatedMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTopRatedMovies extends _i1.Mock implements _i15.GetTopRatedMovies {
  MockGetTopRatedMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_1()) as _i3.MovieRepository);
  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i7.Movie>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: Future<_i2.Either<_i6.Failure, List<_i7.Movie>>>.value(
              _FakeEither_0<_i6.Failure, List<_i7.Movie>>())) as _i5
          .Future<_i2.Either<_i6.Failure, List<_i7.Movie>>>);
}

/// A class which mocks [GetWatchListStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListStatus extends _i1.Mock
    implements _i16.GetWatchListStatus {
  MockGetWatchListStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_1()) as _i3.MovieRepository);
  @override
  _i5.Future<bool> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);
}

/// A class which mocks [GetWatchlistMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistMovies extends _i1.Mock
    implements _i17.GetWatchlistMovies {
  MockGetWatchlistMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i7.Movie>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: Future<_i2.Either<_i6.Failure, List<_i7.Movie>>>.value(
              _FakeEither_0<_i6.Failure, List<_i7.Movie>>())) as _i5
          .Future<_i2.Either<_i6.Failure, List<_i7.Movie>>>);
}

/// A class which mocks [RemoveWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlist extends _i1.Mock implements _i18.RemoveWatchlist {
  MockRemoveWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_1()) as _i3.MovieRepository);
  @override
  _i5.Future<_i2.Either<_i6.Failure, String>> execute(_i8.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#execute, [movie]),
              returnValue: Future<_i2.Either<_i6.Failure, String>>.value(
                  _FakeEither_0<_i6.Failure, String>()))
          as _i5.Future<_i2.Either<_i6.Failure, String>>);
}

/// A class which mocks [SaveWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlist extends _i1.Mock implements _i19.SaveWatchlist {
  MockSaveWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_1()) as _i3.MovieRepository);
  @override
  _i5.Future<_i2.Either<_i6.Failure, String>> execute(_i8.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#execute, [movie]),
              returnValue: Future<_i2.Either<_i6.Failure, String>>.value(
                  _FakeEither_0<_i6.Failure, String>()))
          as _i5.Future<_i2.Either<_i6.Failure, String>>);
}

/// A class which mocks [SearchMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchMovies extends _i1.Mock implements _i20.SearchMovies {
  MockSearchMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_1()) as _i3.MovieRepository);
  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i7.Movie>>> execute(String? query) =>
      (super.noSuchMethod(Invocation.method(#execute, [query]),
          returnValue: Future<_i2.Either<_i6.Failure, List<_i7.Movie>>>.value(
              _FakeEither_0<_i6.Failure, List<_i7.Movie>>())) as _i5
          .Future<_i2.Either<_i6.Failure, List<_i7.Movie>>>);
}

/// A class which mocks [GetAiringTVShows].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAiringTVShows extends _i1.Mock implements _i21.GetAiringTVShows {
  MockGetAiringTVShows() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TVShowRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTVShowRepository_2()) as _i4.TVShowRepository);
  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i9.TVShow>>> call() =>
      (super.noSuchMethod(Invocation.method(#call, []),
          returnValue: Future<_i2.Either<_i6.Failure, List<_i9.TVShow>>>.value(
              _FakeEither_0<_i6.Failure, List<_i9.TVShow>>())) as _i5
          .Future<_i2.Either<_i6.Failure, List<_i9.TVShow>>>);
}

/// A class which mocks [GetPopularTVShows].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularTVShows extends _i1.Mock implements _i22.GetPopularTVShows {
  MockGetPopularTVShows() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TVShowRepository get tvRepository =>
      (super.noSuchMethod(Invocation.getter(#tvRepository),
          returnValue: _FakeTVShowRepository_2()) as _i4.TVShowRepository);
  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i9.TVShow>>> call() =>
      (super.noSuchMethod(Invocation.method(#call, []),
          returnValue: Future<_i2.Either<_i6.Failure, List<_i9.TVShow>>>.value(
              _FakeEither_0<_i6.Failure, List<_i9.TVShow>>())) as _i5
          .Future<_i2.Either<_i6.Failure, List<_i9.TVShow>>>);
}

/// A class which mocks [GetTvRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvRecommendations extends _i1.Mock
    implements _i23.GetTvRecommendations {
  MockGetTvRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TVShowRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTVShowRepository_2()) as _i4.TVShowRepository);
  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i9.TVShow>>> call(int? id) =>
      (super.noSuchMethod(Invocation.method(#call, [id]),
          returnValue: Future<_i2.Either<_i6.Failure, List<_i9.TVShow>>>.value(
              _FakeEither_0<_i6.Failure, List<_i9.TVShow>>())) as _i5
          .Future<_i2.Either<_i6.Failure, List<_i9.TVShow>>>);
}

/// A class which mocks [GetTVShowDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTVShowDetail extends _i1.Mock implements _i24.GetTVShowDetail {
  MockGetTVShowDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TVShowRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTVShowRepository_2()) as _i4.TVShowRepository);
  @override
  _i5.Future<_i2.Either<_i6.Failure, _i10.TVShowDetail>> call(int? id) =>
      (super.noSuchMethod(Invocation.method(#call, [id]),
          returnValue: Future<_i2.Either<_i6.Failure, _i10.TVShowDetail>>.value(
              _FakeEither_0<_i6.Failure, _i10.TVShowDetail>())) as _i5
          .Future<_i2.Either<_i6.Failure, _i10.TVShowDetail>>);
}

/// A class which mocks [GetTVShowWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTVShowWatchlist extends _i1.Mock
    implements _i25.GetTVShowWatchlist {
  MockGetTVShowWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TVShowRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTVShowRepository_2()) as _i4.TVShowRepository);
  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i9.TVShow>>> call() =>
      (super.noSuchMethod(Invocation.method(#call, []),
          returnValue: Future<_i2.Either<_i6.Failure, List<_i9.TVShow>>>.value(
              _FakeEither_0<_i6.Failure, List<_i9.TVShow>>())) as _i5
          .Future<_i2.Either<_i6.Failure, List<_i9.TVShow>>>);
}

/// A class which mocks [GetTVShowWatchlistStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTVShowWatchlistStatus extends _i1.Mock
    implements _i26.GetTVShowWatchlistStatus {
  MockGetTVShowWatchlistStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TVShowRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTVShowRepository_2()) as _i4.TVShowRepository);
  @override
  _i5.Future<bool> call(int? id) =>
      (super.noSuchMethod(Invocation.method(#call, [id]),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);
}

/// A class which mocks [RemoveTVShowWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveTVShowWatchlist extends _i1.Mock
    implements _i27.RemoveTVShowWatchlist {
  MockRemoveTVShowWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TVShowRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTVShowRepository_2()) as _i4.TVShowRepository);
  @override
  _i5.Future<_i2.Either<_i6.Failure, String>> call(int? id) =>
      (super.noSuchMethod(Invocation.method(#call, [id]),
              returnValue: Future<_i2.Either<_i6.Failure, String>>.value(
                  _FakeEither_0<_i6.Failure, String>()))
          as _i5.Future<_i2.Either<_i6.Failure, String>>);
}

/// A class which mocks [SaveTVShowWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveTVShowWatchlist extends _i1.Mock
    implements _i28.SaveTVShowWatchlist {
  MockSaveTVShowWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TVShowRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTVShowRepository_2()) as _i4.TVShowRepository);
  @override
  _i5.Future<_i2.Either<_i6.Failure, String>> call(
          _i10.TVShowDetail? tvShowDetail) =>
      (super.noSuchMethod(Invocation.method(#call, [tvShowDetail]),
              returnValue: Future<_i2.Either<_i6.Failure, String>>.value(
                  _FakeEither_0<_i6.Failure, String>()))
          as _i5.Future<_i2.Either<_i6.Failure, String>>);
}

/// A class which mocks [SearchTVShows].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchTVShows extends _i1.Mock implements _i29.SearchTVShows {
  MockSearchTVShows() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i9.TVShow>>> call(String? query) =>
      (super.noSuchMethod(Invocation.method(#call, [query]),
          returnValue: Future<_i2.Either<_i6.Failure, List<_i9.TVShow>>>.value(
              _FakeEither_0<_i6.Failure, List<_i9.TVShow>>())) as _i5
          .Future<_i2.Either<_i6.Failure, List<_i9.TVShow>>>);
}
